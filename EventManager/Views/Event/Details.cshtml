@model EventManager.Models.DetailedViewModel



@{
                /**/

                ViewBag.Title = "Details";
}

<script src="https://maps.google.com/maps/api/js?key=AIzaSyCpuXscFeQ-TCFkQkbIGUBYu5odK3E9CB4&sensor=true" type="text/javascript"></script>

@section scripts {
    <script type="text/javascript">
        var map;
        var markersArray = [];
    $(document).ready(function () {
        GetMap();
    });

    // Функция загрузки
    function GetMap() {

        google.maps.visualRefresh = true;
        // установка основных координат
        var Minsk = new google.maps.LatLng(53.9045398, 27.5615244);

        // Установка общих параметров отображения карты, как масштаб, центральная точка и тип карты
        var mapOptions = {
            zoom: 15,
            center: Minsk,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // Встраиваем гугл-карты в элемент на странице и получаем объект карты
         map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

            $.getJSON('@Url.Action("GetEvent/"+Model.Event.Id,"Event")', function (data) {
                // Проходим по всем данным и устанавливаем для них маркеры
                $.each(data, function (i, item) {
                    var eve= new google.maps.Marker({
                        'position': new google.maps.LatLng(item.Lat, item.Lng),
                        'map': map,
                        'title': item.Name
                    });

                    // Берем для этих маркеров синие иконки с сайта google
                    eve.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                    // Для каждого объекта добавляем доп. информацию, выводимую в отдельном окне
                    var infowindow = new google.maps.InfoWindow({
                        content: "<div class='stationInfo'><h2>Название " + item.Name + "</h2><div><h4> "
                            + item.Event.ShortDescription + "</h4></div><div><h4> " + item.EventTypeId + " </h4></div></div>"
                    });

                    // обработчик нажатия на маркер объекта
                    google.maps.event.addListener(eve, 'click', function () {
                        infowindow.open(map, marker);
                    });
                })
            });
        }
    </script>
}

<h2>Подробности</h2>
@using (Html.BeginForm("CreateComment/" + Model.Event.Id, "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


<div>
    <dl class="dl-horizontal">
        <dt>
            <label class="control-label col-md-2" for="Name">Название</label>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.Name)
        </dd>

        <dt>
            <label class="control-label col-md-2" for="ShortDescription">Краткое описание</label>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.ShortDescription)
        </dd>

        <dt>
            <label class="control-label col-md-2" for="Description">Описание</label>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.Description)
        </dd>

        <dt>
            <label class="control-label col-md-2" for="Time">Дата</label>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.Time)
        </dd>


    </dl>
    <div class="container">
        @foreach (var im in Model.Event.Images)
        {
            <figure class="col-lg-3 col-md-4 col-xs-6">
                
                <a href=@Url.Content(im.Link) data-size="1600x1067">
                    <img src=@Url.Content(im.Link) class="img-fluid" width="400" />
                </a>
            </figure>
        }

    </div>
</div>
    
        <div id="map_canvas" style="height: 200px; width:600px; margin-top:3%"></div>
    
    <div>
        <dl class="dl-horizontal">
            @foreach (var cm in Model.Comments)
            {
                <dt>
                    <b>@cm.Owner.FirstName</b>
                </dt>
                <dd>
                    <b>@cm.Text</b>
                </dd>
            }
        </dl>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Text">Поле ввода</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment.Text, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment.Text, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Проккомментировать" class="btn btn-default" />
        </div>
    </div>

}
@if (Model.IsSubscribed == false)
{
    using (Html.BeginForm("Subscribe/" + Model.Event.Id, "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Подписаться" class="btn btn-default" />
            </div>
        </div>
    }
}
else
{
    using (Html.BeginForm("Unsubscribe/" + Model.Event.Id, "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Отписаться" class="btn btn-default" />
            </div>
        </div>
    }
}


<p>
    @Html.ActionLink("Вернуться к списку", "Index")
</p>

